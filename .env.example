# Environment Configuration Template
# Copy this file to .env.dev, .env.uat, or .env.prod and fill in the actual values
# NEVER commit actual environment files with real secrets!

# =============================================================================
# ENVIRONMENT SETTINGS
# =============================================================================
# Set the environment: dev, uat, or prod
APP_ENV=dev

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================
APP_NAME=Memic Backend
APP_VERSION=1.0.0
DEBUG=true
LOG_LEVEL=INFO

# =============================================================================
# SERVER SETTINGS
# =============================================================================
HOST=0.0.0.0
PORT=8000

# =============================================================================
# DATABASE SETTINGS
# =============================================================================
# PostgreSQL connection string
# Format: postgresql://username:password@host:port/database_name
DATABASE_URL=postgresql://user:password@localhost/memic_db

# =============================================================================
# API KEYS AND SECRETS
# =============================================================================
# OpenAI API Key (get from https://platform.openai.com/api-keys)
# For dev: Use a key with spending limits set in OpenAI dashboard
OPENAI_API_KEY=your_openai_api_key_here

# JWT Secret Key (generate a strong random string)
# Use: python -c "import secrets; print(secrets.token_urlsafe(32))"
JWT_SECRET_KEY=your_jwt_secret_key_here

# Encryption Key (generate a strong random string)
# Use: python -c "import secrets; print(secrets.token_urlsafe(32))"
ENCRYPTION_KEY=your_encryption_key_here

# =============================================================================
# THIRD-PARTY SERVICE KEYS
# =============================================================================
# Stripe Secret Key (get from https://dashboard.stripe.com/apikeys)
# For dev: Use test keys (sk_test_...)
STRIPE_SECRET_KEY=your_stripe_secret_key_here

# SendGrid API Key (get from https://app.sendgrid.com/settings/api_keys)
SENDGRID_API_KEY=your_sendgrid_api_key_here

# =============================================================================
# AZURE SERVICES
# =============================================================================
# Azure Storage (for file uploads and document storage)
AZURE_STORAGE_CONNECTION_STRING=your_azure_storage_connection_string_here
AZURE_STORAGE_CONTAINER_NAME=memic-documents

# Azure Form Recognizer / Document Intelligence (for parsing)
# Get from: https://portal.azure.com -> Azure AI services -> Document Intelligence
# Cost: ~$1.50 per 1000 pages with prebuilt-layout model
AZURE_AFR_ENDPOINT=https://your-resource.cognitiveservices.azure.com/
AZURE_AFR_API_KEY=your_azure_form_recognizer_key_here

# =============================================================================
# DOCUMENT PARSING CONFIGURATION (B2B Cost Control)
# =============================================================================
# Parsing Service Selection
# Options: azure_form_recognizer (default)
# Future: llamaparse, aws_textract
PARSING_SERVICE=azure_form_recognizer

# Feature Flags for Cost Control
# Each flag controls a feature that incurs additional costs

# LLM Enrichment: Uses OpenAI to extract metadata (document type, summary, tags)
# Cost: ~$0.002 per document with gpt-4o-mini
# When disabled: Returns empty enriched_metadata dict
ENABLE_LLM_ENRICHMENT=false

# Advanced Table Extraction: Uses premium AFR features for complex tables
# Cost: May incur additional AFR costs
# When disabled: Uses standard table extraction
ENABLE_ADVANCED_TABLE_EXTRACTION=false

# Section Hierarchy Extraction: Extracts document structure (headings, levels)
# Cost: Additional processing time and AFR API calls
# When disabled: Returns flat section list
ENABLE_SECTION_HIERARCHY=false

# OpenAI Model for Enrichment (if ENABLE_LLM_ENRICHMENT=true)
# Options: gpt-4o-mini (cost-effective), gpt-4o (premium)
OPENAI_MODEL=gpt-4o-mini

# Azure Form Recognizer Timeouts and Retries
AFR_POLLING_TIMEOUT=120
AFR_RETRY_ATTEMPTS=3
AFR_RETRY_DELAY=2

# =============================================================================
# CORS SETTINGS
# =============================================================================
# Comma-separated list of allowed origins
# For dev: * (allows all origins)
# For prod: specific domains only
CORS_ORIGINS=*

# =============================================================================
# ENVIRONMENT-SPECIFIC NOTES
# =============================================================================
# DEV ENVIRONMENT:
# - Use test API keys with spending limits
# - DEBUG=true for detailed logging
# - CORS_ORIGINS=* for development convenience
#
# UAT ENVIRONMENT:
# - Use staging API keys
# - DEBUG=false for production-like behavior
# - CORS_ORIGINS should be restricted to UAT domains
#
# PROD ENVIRONMENT:
# - Use production API keys
# - DEBUG=false
# - CORS_ORIGINS should be restricted to production domains
# - All secrets should be stored in Azure Key Vault or similar
