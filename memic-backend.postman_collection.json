{
	"info": {
		"_postman_id": "memic-backend-collection",
		"name": "memic-backend",
		"description": "Complete API collection for Memic Backend - FastAPI backend with MVC architecture",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Health",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/health",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"health"
							]
						},
						"description": "Check application health status including database connectivity"
					},
					"response": []
				}
			],
			"description": "Health check endpoints"
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Signup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('user_id', response.id);",
									"    console.log('User ID saved:', response.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"punith@memic.ai\",\n    \"password\": \"12345678\",\n    \"name\": \"Punith\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/signup",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"signup"
							]
						},
						"description": "Create a new user account"
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('access_token', response.access_token);",
									"    console.log('Access token saved');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"punith@memic.ai\",\n    \"password\": \"12345678\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Login with email and password to get JWT access token"
					},
					"response": []
				}
			],
			"description": "Authentication endpoints for signup and login"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get My Profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/users/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"me"
							]
						},
						"description": "Get current user's profile information"
					},
					"response": []
				},
				{
					"name": "Update My Profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Punith Updated\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/users/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"me"
							]
						},
						"description": "Update current user's profile (name and/or email)"
					},
					"response": []
				}
			],
			"description": "User profile management endpoints"
		},
		{
			"name": "Organizations",
			"item": [
				{
					"name": "Create Organization",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('org_id', response.id);",
									"    console.log('Organization ID saved:', response.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"memic_dev\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/organizations/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"organizations",
								""
							]
						},
						"description": "Create a new organization. Creator is automatically added as OWNER."
					},
					"response": []
				},
				{
					"name": "List My Organizations",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/organizations/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"organizations",
								""
							]
						},
						"description": "List all organizations where current user is a member"
					},
					"response": []
				},
				{
					"name": "Get Organization",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/organizations/{{org_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"organizations",
								"{{org_id}}"
							]
						},
						"description": "Get organization details by ID"
					},
					"response": []
				},
				{
					"name": "Update Organization",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"memic_dev_updated\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/organizations/{{org_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"organizations",
								"{{org_id}}"
							]
						},
						"description": "Update organization details. Only OWNER or ADMIN can update."
					},
					"response": []
				},
				{
					"name": "Delete Organization",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/organizations/{{org_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"organizations",
								"{{org_id}}"
							]
						},
						"description": "Delete an organization. Only OWNER can delete. Cascades to delete projects and memberships."
					},
					"response": []
				}
			],
			"description": "Organization management endpoints"
		},
		{
			"name": "Projects",
			"item": [
				{
					"name": "Create Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('project_id', response.id);",
									"    console.log('Project ID saved:', response.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"crazy_one\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/organizations/{{org_id}}/projects/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"organizations",
								"{{org_id}}",
								"projects",
								""
							]
						},
						"description": "Create a new project under an organization. Only OWNER or ADMIN can create projects."
					},
					"response": []
				},
				{
					"name": "List Organization Projects",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/organizations/{{org_id}}/projects/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"organizations",
								"{{org_id}}",
								"projects",
								""
							]
						},
						"description": "List all projects in an organization"
					},
					"response": []
				},
				{
					"name": "Get Project",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/organizations/{{org_id}}/projects/{{project_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"organizations",
								"{{org_id}}",
								"projects",
								"{{project_id}}"
							]
						},
						"description": "Get project details by ID"
					},
					"response": []
				},
				{
					"name": "Update Project",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"crazy_one_updated\",\n    \"is_active\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/organizations/{{org_id}}/projects/{{project_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"organizations",
								"{{org_id}}",
								"projects",
								"{{project_id}}"
							]
						},
						"description": "Update project details. Only OWNER or ADMIN can update projects."
					},
					"response": []
				},
				{
					"name": "Delete Project",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/organizations/{{org_id}}/projects/{{project_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"organizations",
								"{{org_id}}",
								"projects",
								"{{project_id}}"
							]
						},
						"description": "Delete a project. Only OWNER or ADMIN can delete projects."
					},
					"response": []
				}
			],
			"description": "Project management endpoints"
		},
		{
			"name": "Members",
			"item": [
				{
					"name": "Add Member",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"member@memic.ai\",\n    \"role\": \"member\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/organizations/{{org_id}}/members/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"organizations",
								"{{org_id}}",
								"members",
								""
							]
						},
						"description": "Add a member to an organization. Only OWNER or ADMIN can add members. User must be registered."
					},
					"response": []
				},
				{
					"name": "List Members",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/organizations/{{org_id}}/members/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"organizations",
								"{{org_id}}",
								"members",
								""
							]
						},
						"description": "List all members of an organization"
					},
					"response": []
				},
				{
					"name": "Update Member Role",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"role\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/organizations/{{org_id}}/members/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"organizations",
								"{{org_id}}",
								"members",
								"{{user_id}}"
							]
						},
						"description": "Update a member's role. Only OWNER can change roles."
					},
					"response": []
				},
				{
					"name": "Remove Member",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/organizations/{{org_id}}/members/{{user_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"organizations",
								"{{org_id}}",
								"members",
								"{{user_id}}"
							]
						},
						"description": "Remove a member from an organization. Only OWNER or ADMIN can remove members. Cannot remove the last owner."
					},
					"response": []
				}
			],
			"description": "Organization member management endpoints"
		},
		{
			"name": "Files",
			"item": [
				{
					"name": "Upload File",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.collectionVariables.set('file_id', response.id);",
									"    console.log('File ID saved:', response.id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/projects/{{project_id}}/files",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"{{project_id}}",
								"files"
							]
						},
						"description": "Upload a file to a project and initiate RAG processing pipeline"
					},
					"response": []
				},
				{
					"name": "List Files",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/{{project_id}}/files?page=1&page_size=50",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"{{project_id}}",
								"files"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "page_size",
									"value": "50"
								},
								{
									"key": "status",
									"value": "READY",
									"disabled": true
								}
							]
						},
						"description": "Get a paginated list of files in a project"
					},
					"response": []
				},
				{
					"name": "Get File Details",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/{{project_id}}/files/{{file_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"{{project_id}}",
								"files",
								"{{file_id}}"
							]
						},
						"description": "Get detailed information about a file including metadata"
					},
					"response": []
				},
				{
					"name": "Get File Status",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/{{project_id}}/files/{{file_id}}/status",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"{{project_id}}",
								"files",
								"{{file_id}}",
								"status"
							]
						},
						"description": "Get detailed processing status and progress for a file"
					},
					"response": []
				},
				{
					"name": "Update File Metadata",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"metadata\": {\n        \"category\": \"contracts\",\n        \"department\": \"legal\",\n        \"priority\": \"high\"\n    }\n}"
						},
						"url": {
							"raw": "{{base_url}}/projects/{{project_id}}/files/{{file_id}}/metadata",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"{{project_id}}",
								"files",
								"{{file_id}}",
								"metadata"
							]
						},
						"description": "Update or create custom metadata for a file"
					},
					"response": []
				},
				{
					"name": "Delete File",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/projects/{{project_id}}/files/{{file_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"{{project_id}}",
								"files",
								"{{file_id}}"
							]
						},
						"description": "Delete a file from storage, vector database, and database"
					},
					"response": []
				},
				{
					"name": "Semantic Search",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{access_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"query\": \"What are the main contract terms?\",\n    \"top_k\": 10\n}"
						},
						"url": {
							"raw": "{{base_url}}/projects/{{project_id}}/files/search",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"projects",
								"{{project_id}}",
								"files",
								"search"
							]
						},
						"description": "Search for similar content across all files in a project (Phase 1 stub)"
					},
					"response": []
				}
			],
			"description": "File upload and RAG operations"
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000/api/v1",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "org_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "project_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "file_id",
			"value": "",
			"type": "string"
		}
	]
}

